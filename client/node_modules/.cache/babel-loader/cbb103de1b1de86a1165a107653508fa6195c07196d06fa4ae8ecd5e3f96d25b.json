{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthramakrishnan/Documents/minesweeper-multiplayer/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport { Button } from './components/ui/button';\nimport { Input } from './components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from './components/ui/card';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nconst Cell = ({\n  value,\n  revealed,\n  flagged,\n  onClick,\n  onContextMenu,\n  revealedBy,\n  flaggedBy,\n  playerColors\n}) => {\n  const borderStyle = revealedBy ? {\n    borderColor: playerColors[revealedBy],\n    borderWidth: '2px'\n  } : flaggedBy ? {\n    borderColor: playerColors[flaggedBy],\n    borderWidth: '2px'\n  } : {};\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `w-8 h-8 border border-gray-400 flex items-center justify-center font-bold ${revealed ? 'bg-gray-200' : 'bg-gray-100 hover:bg-gray-300'}`,\n    style: borderStyle,\n    onClick: onClick,\n    onContextMenu: onContextMenu,\n    children: revealed ? value === -1 ? 'ðŸ’£' : value > 0 ? value : '' : flagged ? 'ðŸš©' : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Cell;\nconst PlayerScore = ({\n  player\n}) => /*#__PURE__*/_jsxDEV(Card, {\n  className: \"w-48\",\n  children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n    children: /*#__PURE__*/_jsxDEV(CardTitle, {\n      style: {\n        color: player.color\n      },\n      children: player.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", player.score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this);\n_c2 = PlayerScore;\nconst Minesweeper = () => {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [gameId, setGameId] = useState('');\n  const [gameTime, setGameTime] = useState(0);\n  const [isCreatingGame, setIsCreatingGame] = useState(false);\n  const [playerColors, setPlayerColors] = useState({});\n  useEffect(() => {\n    // Check for gameId in URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const urlGameId = urlParams.get('gameId');\n    if (urlGameId) {\n      setGameId(urlGameId);\n    }\n    socket.on('gameState', newGameState => {\n      setGameState(newGameState);\n      setGameTime(newGameState.gameTime);\n      // Update player colors mapping\n      const colorMap = {};\n      newGameState.players.forEach(player => {\n        colorMap[player.id] = player.color;\n      });\n      setPlayerColors(colorMap);\n    });\n    socket.on('playerJoined', newPlayer => {\n      setGameState(prevState => ({\n        ...prevState,\n        players: [...prevState.players, newPlayer]\n      }));\n    });\n    socket.on('playerLeft', playerId => {\n      setGameState(prevState => ({\n        ...prevState,\n        players: prevState.players.filter(p => p.id !== playerId)\n      }));\n    });\n    socket.on('updateTime', time => {\n      setGameTime(time);\n    });\n    return () => {\n      socket.off('gameState');\n      socket.off('playerJoined');\n      socket.off('playerLeft');\n      socket.off('updateTime');\n    };\n  }, []);\n  const createGame = useCallback(async () => {\n    try {\n      setIsCreatingGame(true);\n      const createResponse = await fetch('http://localhost:3001/create-game', {\n        method: 'POST'\n      });\n      const createData = await createResponse.json();\n      const newGameId = createData.gameId;\n\n      // Disconnect from the current game's socket if it exists\n      if (socket) {\n        socket.disconnect();\n      }\n\n      // Clear any existing game state\n      setGameState(null);\n      setGameTime(0);\n      setPlayerName('');\n\n      // Redirect to the new game URL\n      window.location.href = `${window.location.origin}?gameId=${newGameId}`;\n\n      // The page will reload, so the following code won't execute,\n      // but we'll keep it for completeness in case the redirect doesn't happen\n\n      const randomPlayerName = `Player ${Math.floor(Math.random() * 1000)}`;\n      const fetchResponse = await fetch(`http://localhost:3001/game/${newGameId}`);\n      if (fetchResponse.ok) {\n        const gameData = await fetchResponse.json();\n        joinGame(newGameId, randomPlayerName);\n        setGameState(gameData);\n        setGameTime(gameData.gameTime);\n        toast.success('Game created successfully!');\n      } else {\n        throw new Error('Failed to fetch the newly created game');\n      }\n    } catch (error) {\n      console.error('Error in createGame function:', error);\n      toast.error('Failed to create game. Please try again.');\n    } finally {\n      setIsCreatingGame(false);\n    }\n  }, [socket, joinGame]);\n  const joinGame = useCallback((gameIdToJoin, playerNameToJoin) => {\n    const idToUse = gameId || gameIdToJoin;\n    const nameToUse = playerNameToJoin || playerName;\n    if (nameToUse.trim() && idToUse) {\n      socket.emit('joinGame', {\n        gameId: idToUse,\n        playerName: nameToUse\n      });\n      toast.success('Joining game...');\n    } else {\n      toast.error('Please enter your name and game ID');\n    }\n  }, [gameId, playerName]);\n  const handleCellClick = (row, col) => {\n    socket.emit('revealCell', {\n      gameId,\n      row,\n      col\n    });\n  };\n  const handleCellRightClick = (e, row, col) => {\n    e.preventDefault();\n    socket.emit('toggleFlag', {\n      gameId,\n      row,\n      col\n    });\n  };\n  if (!gameState) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center space-y-4 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"Minesweeper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), !gameId ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          console.log('Create Game button clicked');\n          createGame();\n        },\n        disabled: isCreatingGame,\n        children: isCreatingGame ? 'Creating Game...' : 'Create New Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value),\n          placeholder: \"Enter your name\",\n          className: \"w-64 mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: joinGame,\n          children: \"Join Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Multiplayer Minesweeper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4\",\n      children: gameState.players.map(player => /*#__PURE__*/_jsxDEV(PlayerScore, {\n        player: player\n      }, player.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl\",\n      children: [\"Time: \", gameTime, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-0.5 p-2 bg-gray-300\",\n      children: gameState.grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n          value: cell.value,\n          revealed: cell.revealed,\n          flagged: cell.flagged,\n          revealedBy: cell.revealedBy,\n          flaggedBy: cell.flaggedBy,\n          playerColors: playerColors,\n          onClick: () => handleCellClick(rowIndex, colIndex),\n          onContextMenu: e => handleCellRightClick(e, rowIndex, colIndex)\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), gameState.gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl font-bold text-red-500\",\n      children: \"Game Over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 30\n    }, this), gameState.win && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl font-bold text-green-500\",\n      children: \"You Win!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }, this), (gameState.gameOver || gameState.win) && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: createGame,\n      className: \"mt-4\",\n      children: \"Create New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(Minesweeper, \"dYQYeC8dqiV1+i2Q0mNBN1V/n7I=\");\n_c3 = Minesweeper;\nexport default Minesweeper;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"PlayerScore\");\n$RefreshReg$(_c3, \"Minesweeper\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","io","Button","Input","Card","CardContent","CardHeader","CardTitle","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","Cell","value","revealed","flagged","onClick","onContextMenu","revealedBy","flaggedBy","playerColors","borderStyle","borderColor","borderWidth","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","PlayerScore","player","color","name","score","_c2","Minesweeper","_s","gameState","setGameState","playerName","setPlayerName","gameId","setGameId","gameTime","setGameTime","isCreatingGame","setIsCreatingGame","setPlayerColors","urlParams","URLSearchParams","window","location","search","urlGameId","get","on","newGameState","colorMap","players","forEach","id","newPlayer","prevState","playerId","filter","p","time","off","createGame","createResponse","fetch","method","createData","json","newGameId","disconnect","href","origin","randomPlayerName","Math","floor","random","fetchResponse","ok","gameData","joinGame","success","Error","error","console","gameIdToJoin","playerNameToJoin","idToUse","nameToUse","trim","emit","handleCellClick","row","col","handleCellRightClick","e","preventDefault","log","disabled","type","onChange","target","placeholder","map","grid","rowIndex","cell","colIndex","gameOver","win","_c3","$RefreshReg$"],"sources":["/Users/siddharthramakrishnan/Documents/minesweeper-multiplayer/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport { Button } from './components/ui/button';\nimport { Input } from './components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from './components/ui/card';\nimport { toast } from 'react-hot-toast';\n\nconst socket = io('http://localhost:3001');\n\nconst Cell = ({ value, revealed, flagged, onClick, onContextMenu, revealedBy, flaggedBy, playerColors }) => {\n  const borderStyle = revealedBy ? { borderColor: playerColors[revealedBy], borderWidth: '2px' } \n                    : flaggedBy ? { borderColor: playerColors[flaggedBy], borderWidth: '2px' }\n                    : {};\n\n  return (\n    <button\n      className={`w-8 h-8 border border-gray-400 flex items-center justify-center font-bold ${\n        revealed ? 'bg-gray-200' : 'bg-gray-100 hover:bg-gray-300'\n      }`}\n      style={borderStyle}\n      onClick={onClick}\n      onContextMenu={onContextMenu}\n    >\n      {revealed\n        ? value === -1\n          ? 'ðŸ’£'\n          : value > 0\n          ? value\n          : ''\n        : flagged\n        ? 'ðŸš©'\n        : ''}\n    </button>\n  );\n};\n\nconst PlayerScore = ({ player }) => (\n  <Card className=\"w-48\">\n    <CardHeader>\n      <CardTitle style={{ color: player.color }}>{player.name}</CardTitle>\n    </CardHeader>\n    <CardContent>\n      <p>Score: {player.score}</p>\n    </CardContent>\n  </Card>\n);\n\nconst Minesweeper = () => {\n  const [gameState, setGameState] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [gameId, setGameId] = useState('');\n  const [gameTime, setGameTime] = useState(0);\n  const [isCreatingGame, setIsCreatingGame] = useState(false);\n  const [playerColors, setPlayerColors] = useState({});\n\n  useEffect(() => {\n    // Check for gameId in URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const urlGameId = urlParams.get('gameId');\n    if (urlGameId) {\n      setGameId(urlGameId);\n    }\n\n    socket.on('gameState', (newGameState) => {\n      setGameState(newGameState);\n      setGameTime(newGameState.gameTime);\n      // Update player colors mapping\n      const colorMap = {};\n      newGameState.players.forEach(player => {\n        colorMap[player.id] = player.color;\n      });\n      setPlayerColors(colorMap);\n    });\n\n    socket.on('playerJoined', (newPlayer) => {\n      setGameState(prevState => ({\n        ...prevState,\n        players: [...prevState.players, newPlayer]\n      }));\n    });\n\n    socket.on('playerLeft', (playerId) => {\n      setGameState(prevState => ({\n        ...prevState,\n        players: prevState.players.filter(p => p.id !== playerId)\n      }));\n    });\n\n    socket.on('updateTime', (time) => {\n      setGameTime(time);\n    });\n\n    return () => {\n      socket.off('gameState');\n      socket.off('playerJoined');\n      socket.off('playerLeft');\n      socket.off('updateTime');\n    };\n  }, []);\n\n  const createGame = useCallback(async () => {\n    try {\n      setIsCreatingGame(true);\n      const createResponse = await fetch('http://localhost:3001/create-game', { method: 'POST' });\n      const createData = await createResponse.json();\n      const newGameId = createData.gameId;\n  \n      // Disconnect from the current game's socket if it exists\n      if (socket) {\n        socket.disconnect();\n      }\n  \n      // Clear any existing game state\n      setGameState(null);\n      setGameTime(0);\n      setPlayerName('');\n  \n      // Redirect to the new game URL\n      window.location.href = `${window.location.origin}?gameId=${newGameId}`;\n  \n      // The page will reload, so the following code won't execute,\n      // but we'll keep it for completeness in case the redirect doesn't happen\n  \n      const randomPlayerName = `Player ${Math.floor(Math.random() * 1000)}`;\n      \n      const fetchResponse = await fetch(`http://localhost:3001/game/${newGameId}`);\n      if (fetchResponse.ok) {\n        const gameData = await fetchResponse.json();\n        joinGame(newGameId, randomPlayerName);\n        setGameState(gameData);\n        setGameTime(gameData.gameTime);\n        toast.success('Game created successfully!');\n      } else {\n        throw new Error('Failed to fetch the newly created game');\n      }\n    } catch (error) {\n      console.error('Error in createGame function:', error);\n      toast.error('Failed to create game. Please try again.');\n    } finally {\n      setIsCreatingGame(false);\n    }\n  }, [socket, joinGame]);\n\n  const joinGame = useCallback((gameIdToJoin, playerNameToJoin) => {\n    const idToUse = gameId || gameIdToJoin;\n    const nameToUse = playerNameToJoin || playerName;\n\n    if (nameToUse.trim() && idToUse) {\n      socket.emit('joinGame', { gameId: idToUse, playerName: nameToUse });\n      toast.success('Joining game...');\n    } else {\n      toast.error('Please enter your name and game ID');\n    }\n  }, [gameId, playerName]);\n\n  const handleCellClick = (row, col) => {\n    socket.emit('revealCell', { gameId, row, col });\n  };\n\n  const handleCellRightClick = (e, row, col) => {\n    e.preventDefault();\n    socket.emit('toggleFlag', { gameId, row, col });\n  };\n\n  if (!gameState) {\n    return (\n      <div className=\"flex flex-col items-center space-y-4 p-4\">\n        <h1 className=\"text-2xl font-bold\">Minesweeper</h1>\n        {!gameId ? (\n          <Button \n            onClick={() => {\n              console.log('Create Game button clicked');\n              createGame();\n            }} \n            disabled={isCreatingGame}\n          >\n            {isCreatingGame ? 'Creating Game...' : 'Create New Game'}\n          </Button>\n        ) : (\n          <>\n            <Input\n              type=\"text\"\n              value={playerName}\n              onChange={(e) => setPlayerName(e.target.value)}\n              placeholder=\"Enter your name\"\n              className=\"w-64 mb-2\"\n            />\n            <Button onClick={joinGame}>Join Game</Button>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4 p-4\">\n      <h1 className=\"text-2xl font-bold\">Multiplayer Minesweeper</h1>\n      <div className=\"flex space-x-4\">\n        {gameState.players.map((player) => (\n          <PlayerScore key={player.id} player={player} />\n        ))}\n      </div>\n      <div className=\"text-xl\">Time: {gameTime} seconds</div>\n      <div className=\"grid gap-0.5 p-2 bg-gray-300\">\n        {gameState.grid.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"flex\">\n            {row.map((cell, colIndex) => (\n              <Cell\n                key={`${rowIndex}-${colIndex}`}\n                value={cell.value}\n                revealed={cell.revealed}\n                flagged={cell.flagged}\n                revealedBy={cell.revealedBy}\n                flaggedBy={cell.flaggedBy}\n                playerColors={playerColors}\n                onClick={() => handleCellClick(rowIndex, colIndex)}\n                onContextMenu={(e) => handleCellRightClick(e, rowIndex, colIndex)}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n      {gameState.gameOver && <div className=\"text-xl font-bold text-red-500\">Game Over!</div>}\n      {gameState.win && <div className=\"text-xl font-bold text-green-500\">You Win!</div>}\n      {(gameState.gameOver || gameState.win) && (\n        <Button onClick={createGame} className=\"mt-4\">\n          Create New Game\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default Minesweeper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}